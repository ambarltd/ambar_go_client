/*
Ambar OpenAPI Specification

Details about communicating with Ambar.cloud public endpoints. Supported HTTP rest endpoints and their  request and response details.

API version: 2025-04-02
Contact: contact@ambar.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Ambar

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ResourceInvalidStateException type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceInvalidStateException{}

// ResourceInvalidStateException struct for ResourceInvalidStateException
type ResourceInvalidStateException struct {
	ResourceInvalidStateException string `json:"ResourceInvalidStateException"`
}

type _ResourceInvalidStateException ResourceInvalidStateException

// NewResourceInvalidStateException instantiates a new ResourceInvalidStateException object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceInvalidStateException(resourceInvalidStateException string) *ResourceInvalidStateException {
	this := ResourceInvalidStateException{}
	this.ResourceInvalidStateException = resourceInvalidStateException
	return &this
}

// NewResourceInvalidStateExceptionWithDefaults instantiates a new ResourceInvalidStateException object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceInvalidStateExceptionWithDefaults() *ResourceInvalidStateException {
	this := ResourceInvalidStateException{}
	return &this
}

// GetResourceInvalidStateException returns the ResourceInvalidStateException field value
func (o *ResourceInvalidStateException) GetResourceInvalidStateException() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceInvalidStateException
}

// GetResourceInvalidStateExceptionOk returns a tuple with the ResourceInvalidStateException field value
// and a boolean to check if the value has been set.
func (o *ResourceInvalidStateException) GetResourceInvalidStateExceptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceInvalidStateException, true
}

// SetResourceInvalidStateException sets field value
func (o *ResourceInvalidStateException) SetResourceInvalidStateException(v string) {
	o.ResourceInvalidStateException = v
}

func (o ResourceInvalidStateException) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceInvalidStateException) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ResourceInvalidStateException"] = o.ResourceInvalidStateException
	return toSerialize, nil
}

func (o *ResourceInvalidStateException) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ResourceInvalidStateException",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varResourceInvalidStateException := _ResourceInvalidStateException{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varResourceInvalidStateException)

	if err != nil {
		return err
	}

	*o = ResourceInvalidStateException(varResourceInvalidStateException)

	return err
}

type NullableResourceInvalidStateException struct {
	value *ResourceInvalidStateException
	isSet bool
}

func (v NullableResourceInvalidStateException) Get() *ResourceInvalidStateException {
	return v.value
}

func (v *NullableResourceInvalidStateException) Set(val *ResourceInvalidStateException) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceInvalidStateException) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceInvalidStateException) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceInvalidStateException(val *ResourceInvalidStateException) *NullableResourceInvalidStateException {
	return &NullableResourceInvalidStateException{value: val, isSet: true}
}

func (v NullableResourceInvalidStateException) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceInvalidStateException) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


