/*
Ambar OpenAPI Specification

Details about communicating with Ambar.cloud public endpoints. Supported HTTP rest endpoints and their  request and response details.

API version: 2025-04-02
Contact: contact@ambar.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Ambar

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DescribeResourceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DescribeResourceRequest{}

// DescribeResourceRequest The common request for describing an Ambar resource.
type DescribeResourceRequest struct {
	// An Ambar resourceId.
	ResourceId string `json:"resourceId"`
}

type _DescribeResourceRequest DescribeResourceRequest

// NewDescribeResourceRequest instantiates a new DescribeResourceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeResourceRequest(resourceId string) *DescribeResourceRequest {
	this := DescribeResourceRequest{}
	this.ResourceId = resourceId
	return &this
}

// NewDescribeResourceRequestWithDefaults instantiates a new DescribeResourceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeResourceRequestWithDefaults() *DescribeResourceRequest {
	this := DescribeResourceRequest{}
	return &this
}

// GetResourceId returns the ResourceId field value
func (o *DescribeResourceRequest) GetResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *DescribeResourceRequest) GetResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceId, true
}

// SetResourceId sets field value
func (o *DescribeResourceRequest) SetResourceId(v string) {
	o.ResourceId = v
}

func (o DescribeResourceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeResourceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["resourceId"] = o.ResourceId
	return toSerialize, nil
}

func (o *DescribeResourceRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"resourceId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDescribeResourceRequest := _DescribeResourceRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDescribeResourceRequest)

	if err != nil {
		return err
	}

	*o = DescribeResourceRequest(varDescribeResourceRequest)

	return err
}

type NullableDescribeResourceRequest struct {
	value *DescribeResourceRequest
	isSet bool
}

func (v NullableDescribeResourceRequest) Get() *DescribeResourceRequest {
	return v.value
}

func (v *NullableDescribeResourceRequest) Set(val *DescribeResourceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeResourceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeResourceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeResourceRequest(val *DescribeResourceRequest) *NullableDescribeResourceRequest {
	return &NullableDescribeResourceRequest{value: val, isSet: true}
}

func (v NullableDescribeResourceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeResourceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


