/*
Ambar OpenAPI Specification

Details about communicating with Ambar.cloud public endpoints. Supported HTTP rest endpoints and their  request and response details.

API version: 2023-12-01
Contact: contact@ambar.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Ambar

import (
	"encoding/json"
)

// checks if the ResourceNotFoundException type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceNotFoundException{}

// ResourceNotFoundException struct for ResourceNotFoundException
type ResourceNotFoundException struct {
	ResourceNotFoundException string `json:"ResourceNotFoundException"`
}

// NewResourceNotFoundException instantiates a new ResourceNotFoundException object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceNotFoundException(resourceNotFoundException string) *ResourceNotFoundException {
	this := ResourceNotFoundException{}
	this.ResourceNotFoundException = resourceNotFoundException
	return &this
}

// NewResourceNotFoundExceptionWithDefaults instantiates a new ResourceNotFoundException object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceNotFoundExceptionWithDefaults() *ResourceNotFoundException {
	this := ResourceNotFoundException{}
	return &this
}

// GetResourceNotFoundException returns the ResourceNotFoundException field value
func (o *ResourceNotFoundException) GetResourceNotFoundException() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceNotFoundException
}

// GetResourceNotFoundExceptionOk returns a tuple with the ResourceNotFoundException field value
// and a boolean to check if the value has been set.
func (o *ResourceNotFoundException) GetResourceNotFoundExceptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceNotFoundException, true
}

// SetResourceNotFoundException sets field value
func (o *ResourceNotFoundException) SetResourceNotFoundException(v string) {
	o.ResourceNotFoundException = v
}

func (o ResourceNotFoundException) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceNotFoundException) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ResourceNotFoundException"] = o.ResourceNotFoundException
	return toSerialize, nil
}

type NullableResourceNotFoundException struct {
	value *ResourceNotFoundException
	isSet bool
}

func (v NullableResourceNotFoundException) Get() *ResourceNotFoundException {
	return v.value
}

func (v *NullableResourceNotFoundException) Set(val *ResourceNotFoundException) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceNotFoundException) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceNotFoundException) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceNotFoundException(val *ResourceNotFoundException) *NullableResourceNotFoundException {
	return &NullableResourceNotFoundException{value: val, isSet: true}
}

func (v NullableResourceNotFoundException) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceNotFoundException) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


