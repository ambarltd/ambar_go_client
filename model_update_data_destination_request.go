/*
Ambar OpenAPI Specification

Details about communicating with Ambar.cloud public endpoints. Supported HTTP rest endpoints and their  request and response details.

API version: 2024-06-11
Contact: contact@ambar.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Ambar

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateDataDestinationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateDataDestinationRequest{}

// UpdateDataDestinationRequest The resource properties to update on the Ambar Data Destination.
type UpdateDataDestinationRequest struct {
	// The HTTP endpoint which Ambar will deliver messages too. The endpoint should accept a username and password credential pair for authentication.
	DestinationEndpoint *string `json:"destinationEndpoint,omitempty"`
	// The port on which your endpoint service is listening for connections.
	DestinationPort *string `json:"destinationPort,omitempty"`
	// An Ambar resourceId.
	ResourceId string `json:"resourceId"`
}

type _UpdateDataDestinationRequest UpdateDataDestinationRequest

// NewUpdateDataDestinationRequest instantiates a new UpdateDataDestinationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateDataDestinationRequest(resourceId string) *UpdateDataDestinationRequest {
	this := UpdateDataDestinationRequest{}
	this.ResourceId = resourceId
	return &this
}

// NewUpdateDataDestinationRequestWithDefaults instantiates a new UpdateDataDestinationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateDataDestinationRequestWithDefaults() *UpdateDataDestinationRequest {
	this := UpdateDataDestinationRequest{}
	return &this
}

// GetDestinationEndpoint returns the DestinationEndpoint field value if set, zero value otherwise.
func (o *UpdateDataDestinationRequest) GetDestinationEndpoint() string {
	if o == nil || IsNil(o.DestinationEndpoint) {
		var ret string
		return ret
	}
	return *o.DestinationEndpoint
}

// GetDestinationEndpointOk returns a tuple with the DestinationEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDataDestinationRequest) GetDestinationEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationEndpoint) {
		return nil, false
	}
	return o.DestinationEndpoint, true
}

// HasDestinationEndpoint returns a boolean if a field has been set.
func (o *UpdateDataDestinationRequest) HasDestinationEndpoint() bool {
	if o != nil && !IsNil(o.DestinationEndpoint) {
		return true
	}

	return false
}

// SetDestinationEndpoint gets a reference to the given string and assigns it to the DestinationEndpoint field.
func (o *UpdateDataDestinationRequest) SetDestinationEndpoint(v string) {
	o.DestinationEndpoint = &v
}

// GetDestinationPort returns the DestinationPort field value if set, zero value otherwise.
func (o *UpdateDataDestinationRequest) GetDestinationPort() string {
	if o == nil || IsNil(o.DestinationPort) {
		var ret string
		return ret
	}
	return *o.DestinationPort
}

// GetDestinationPortOk returns a tuple with the DestinationPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDataDestinationRequest) GetDestinationPortOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationPort) {
		return nil, false
	}
	return o.DestinationPort, true
}

// HasDestinationPort returns a boolean if a field has been set.
func (o *UpdateDataDestinationRequest) HasDestinationPort() bool {
	if o != nil && !IsNil(o.DestinationPort) {
		return true
	}

	return false
}

// SetDestinationPort gets a reference to the given string and assigns it to the DestinationPort field.
func (o *UpdateDataDestinationRequest) SetDestinationPort(v string) {
	o.DestinationPort = &v
}

// GetResourceId returns the ResourceId field value
func (o *UpdateDataDestinationRequest) GetResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *UpdateDataDestinationRequest) GetResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceId, true
}

// SetResourceId sets field value
func (o *UpdateDataDestinationRequest) SetResourceId(v string) {
	o.ResourceId = v
}

func (o UpdateDataDestinationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateDataDestinationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DestinationEndpoint) {
		toSerialize["destinationEndpoint"] = o.DestinationEndpoint
	}
	if !IsNil(o.DestinationPort) {
		toSerialize["destinationPort"] = o.DestinationPort
	}
	toSerialize["resourceId"] = o.ResourceId
	return toSerialize, nil
}

func (o *UpdateDataDestinationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"resourceId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateDataDestinationRequest := _UpdateDataDestinationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateDataDestinationRequest)

	if err != nil {
		return err
	}

	*o = UpdateDataDestinationRequest(varUpdateDataDestinationRequest)

	return err
}

type NullableUpdateDataDestinationRequest struct {
	value *UpdateDataDestinationRequest
	isSet bool
}

func (v NullableUpdateDataDestinationRequest) Get() *UpdateDataDestinationRequest {
	return v.value
}

func (v *NullableUpdateDataDestinationRequest) Set(val *UpdateDataDestinationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateDataDestinationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateDataDestinationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateDataDestinationRequest(val *UpdateDataDestinationRequest) *NullableUpdateDataDestinationRequest {
	return &NullableUpdateDataDestinationRequest{value: val, isSet: true}
}

func (v NullableUpdateDataDestinationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateDataDestinationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


