/*
Ambar OpenAPI Specification

Details about communicating with Ambar.cloud public endpoints. Supported HTTP rest endpoints and their  request and response details.

API version: 2023-12-01
Contact: contact@ambar.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Ambar

import (
	"encoding/json"
)

// checks if the ResourceDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceDetails{}

// ResourceDetails struct for ResourceDetails
type ResourceDetails struct {
	ResourceId *string `json:"resourceId,omitempty"`
	Description *string `json:"description,omitempty"`
	ResourceState *string `json:"resourceState,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	LastUpdated *string `json:"lastUpdated,omitempty"`
}

// NewResourceDetails instantiates a new ResourceDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceDetails() *ResourceDetails {
	this := ResourceDetails{}
	return &this
}

// NewResourceDetailsWithDefaults instantiates a new ResourceDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceDetailsWithDefaults() *ResourceDetails {
	this := ResourceDetails{}
	return &this
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise.
func (o *ResourceDetails) GetResourceId() string {
	if o == nil || IsNil(o.ResourceId) {
		var ret string
		return ret
	}
	return *o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceDetails) GetResourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceId) {
		return nil, false
	}
	return o.ResourceId, true
}

// HasResourceId returns a boolean if a field has been set.
func (o *ResourceDetails) HasResourceId() bool {
	if o != nil && !IsNil(o.ResourceId) {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given string and assigns it to the ResourceId field.
func (o *ResourceDetails) SetResourceId(v string) {
	o.ResourceId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ResourceDetails) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceDetails) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ResourceDetails) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ResourceDetails) SetDescription(v string) {
	o.Description = &v
}

// GetResourceState returns the ResourceState field value if set, zero value otherwise.
func (o *ResourceDetails) GetResourceState() string {
	if o == nil || IsNil(o.ResourceState) {
		var ret string
		return ret
	}
	return *o.ResourceState
}

// GetResourceStateOk returns a tuple with the ResourceState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceDetails) GetResourceStateOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceState) {
		return nil, false
	}
	return o.ResourceState, true
}

// HasResourceState returns a boolean if a field has been set.
func (o *ResourceDetails) HasResourceState() bool {
	if o != nil && !IsNil(o.ResourceState) {
		return true
	}

	return false
}

// SetResourceState gets a reference to the given string and assigns it to the ResourceState field.
func (o *ResourceDetails) SetResourceState(v string) {
	o.ResourceState = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ResourceDetails) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceDetails) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ResourceDetails) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ResourceDetails) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *ResourceDetails) GetLastUpdated() string {
	if o == nil || IsNil(o.LastUpdated) {
		var ret string
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceDetails) GetLastUpdatedOk() (*string, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *ResourceDetails) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given string and assigns it to the LastUpdated field.
func (o *ResourceDetails) SetLastUpdated(v string) {
	o.LastUpdated = &v
}

func (o ResourceDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ResourceId) {
		toSerialize["resourceId"] = o.ResourceId
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ResourceState) {
		toSerialize["resourceState"] = o.ResourceState
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	return toSerialize, nil
}

type NullableResourceDetails struct {
	value *ResourceDetails
	isSet bool
}

func (v NullableResourceDetails) Get() *ResourceDetails {
	return v.value
}

func (v *NullableResourceDetails) Set(val *ResourceDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceDetails(val *ResourceDetails) *NullableResourceDetails {
	return &NullableResourceDetails{value: val, isSet: true}
}

func (v NullableResourceDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


