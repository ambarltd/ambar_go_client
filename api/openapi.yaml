openapi: 3.0.1
info:
  contact:
    email: contact@ambar.cloud
    name: Open API Spec
    url: https://ambar.cloud/developer/docs/help
  description: Details about communicating with Ambar.cloud public endpoints. Supported
    HTTP rest endpoints and their  request and response details.
  title: Ambar OpenAPI Specification
  version: 2023-12-01
servers:
- description: Ambar regional API endpoint for eu-west-1.
  url: https://euw1.api.ambar.cloud
paths:
  /resource:
    get:
      description: "List the Ambar resources in your Ambar environment. Resources\
        \ will be returned  in a list of lists, where each sub-list will be of one\
        \ Ambar resourceType."
      externalDocs:
        description: More details available in Ambar public docs.
        url: ""
      operationId: ListResources
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourcesResponse'
          description: "A list of Ambar resources in your environment, broken down\
            \ by resourceType"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmbarServiceException'
          description: A service exception occurred. Retry the request again later.
      security:
      - api_key: []
      summary: List the Ambar resources in your Ambar environment.
      tags:
      - Ambar
  /filter:
    delete:
      description: "Deletes a Filter in your Ambar environment, ensure that the filter\
        \ is no longer being used by any DataDestinations in your environment first\
        \ in order to ensure no issues with your Ambar environment."
      externalDocs:
        description: More details available in Ambar public docs.
        url: ""
      operationId: DeleteFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceStateChangeResponse'
          description: The requested resource's id and state after the request.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFilter_400_response'
          description: The request cannot be process at this.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: "The requested resource does not exist, or is not an Ambar\
            \ Filter."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmbarServiceException'
          description: A service exception occurred. Retry the request again later.
      security:
      - api_key: []
      summary: Delete a Filter in your Ambar environment.
      tags:
      - Ambar
    get:
      description: Describe a Filter in your Ambar environment to see detailed information
        about the resource not given by the  ListResources API.
      externalDocs:
        description: More details available in Ambar public docs.
        url: ""
      operationId: DescribeFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filter'
          description: Details about the requested Ambar Filter resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: "The requested resource does not exist, or is not an Ambar\
            \ Filter."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmbarServiceException'
          description: A service exception occurred. Retry the request again later.
      security:
      - api_key: []
      summary: Describes a Filter in your Ambar environment.
      tags:
      - Ambar
    post:
      description: "Create a Filter in your Ambar environment, specifying the DataSources\
        \ from which record sequences should be read and what predicates should be\
        \ applied. Then create a DataDestination with the Filter to send filtered\
        \ sequences using the Filter."
      externalDocs:
        description: More details available in Ambar public docs.
        url: ""
      operationId: CreateFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFilterRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceStateChangeResponse'
          description: The requested resource's id and state after the request.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFilter_400_response'
          description: The request cannot be process at this time.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: "The requested resource does not exist, or is not an Ambar\
            \ Filter."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmbarServiceException'
          description: A service exception occurred. Retry the request again later.
      security:
      - api_key: []
      summary: Create a Filter in your Ambar environment.
      tags:
      - Ambar
  /destination:
    delete:
      description: "Delete a DataDestination in your Ambar environment. This should\
        \ be done first before deleting any Filters referenced by the DataDestination,\
        \ or DataSources referenced in that Filter."
      externalDocs:
        description: More details available in Ambar public docs.
        url: ""
      operationId: DeleteDataDestination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceStateChangeResponse'
          description: The requested resource's id and state after the request.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFilter_400_response'
          description: The request cannot be process at this.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: "The requested resource does not exist, or is not an Ambar\
            \ Filter."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmbarServiceException'
          description: A service exception occurred. Retry the request again later.
      security:
      - api_key: []
      summary: Delete a DataDestination in your Ambar environment.
      tags:
      - Ambar
    get:
      description: Describe a DataDestination in your Ambar environment and see non-sensitive
        details about the configuration of the DataDestination
      externalDocs:
        description: More details available in Ambar public docs.
        url: ""
      operationId: DescribeDataDestination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataDestination'
          description: 200 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: "The requested resource does not exist, or is not an Ambar\
            \ Filter."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmbarServiceException'
          description: A service exception occurred. Retry the request again later.
      security:
      - api_key: []
      summary: Describe a DataDestination in your Ambar environment.
      tags:
      - Ambar
    post:
      description: "Create a DataDestination in you Ambar environment, specifying\
        \ the Filter which the DataDestination should apply before sending message\
        \ sequences to the specified HTTP endpoint."
      externalDocs:
        description: More details available in Ambar public docs.
        url: ""
      operationId: CreateDataDestination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataDestinationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceStateChangeResponse'
          description: The requested resource's id and state after the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmbarServiceException'
          description: A service exception occurred. Retry the request again later.
      security:
      - api_key: []
      summary: Create a DataDestination in your Ambar environment.
      tags:
      - Ambar
  /source:
    delete:
      description: "Delete a DataSource in your Ambar environment, purging all data\
        \ from the environment which was read fromthe DataSource. Make sure to ensure\
        \ that the DataSource is not referenced in any Filters in your Ambar environment."
      externalDocs:
        description: More details available in Ambar public docs.
        url: ""
      operationId: DeleteDataSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceStateChangeResponse'
          description: The requested resource's id and state after the request.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFilter_400_response'
          description: The request cannot be process at this.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: "The requested resource does not exist, or is not an Ambar\
            \ Filter."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmbarServiceException'
          description: A service exception occurred. Retry the request again later.
      security:
      - api_key: []
      summary: Delete a DataSource in your Ambar environment.
      tags:
      - Ambar
    get:
      description: Describe a DataSource in your Ambar environment to see detailed
        information about the resource not given by the  ListResources API.
      externalDocs:
        description: More details available in Ambar public docs.
        url: ""
      operationId: DescribeDataSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSource'
          description: 200 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: "The requested resource does not exist, or is not an Ambar\
            \ Filter."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmbarServiceException'
          description: A service exception occurred. Retry the request again later.
      security:
      - api_key: []
      summary: Describe a DataSource in your Ambar environment.
      tags:
      - Ambar
    post:
      description: "Create a DataSource in you Ambar environment, specifying the type\
        \ of durable storage from which Ambarwill read from, and the corresponding\
        \ configuration values like table name, and columns to include in message\
        \ sequences."
      externalDocs:
        description: More details available in Ambar public docs.
        url: ""
      operationId: CreateDataSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataSourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceStateChangeResponse'
          description: The requested resource's id and state after the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmbarServiceException'
          description: A service exception occurred. Retry the request again later.
      security:
      - api_key: []
      summary: Create a DataSource in your Ambar environment.
      tags:
      - Ambar
components:
  schemas:
    ListResourcesResponse:
      items:
        $ref: '#/components/schemas/ResourceTypeDetails'
      type: array
    ResourceTypeDetails:
      example:
        limit:
          limit: 0
          used: 6
        resources:
        - createdAt: createdAt
          lastUpdated: lastUpdated
          resourceId: resourceId
          resourceState: resourceState
        - createdAt: createdAt
          lastUpdated: lastUpdated
          resourceId: resourceId
          resourceState: resourceState
        resourceType: resourceType
      properties:
        resourceType:
          type: string
        limit:
          $ref: '#/components/schemas/ResourceTypeDetails_limit'
        resources:
          items:
            $ref: '#/components/schemas/ResourceDetails'
          type: array
      type: object
    ResourceDetails:
      example:
        createdAt: createdAt
        lastUpdated: lastUpdated
        resourceId: resourceId
        resourceState: resourceState
      properties:
        resourceId:
          type: string
        resourceState:
          type: string
        createdAt:
          type: string
        lastUpdated:
          type: string
      type: object
    ResourceStateChangeResponse:
      example:
        resourceId: resourceId
        resourceState: resourceState
      properties:
        resourceId:
          type: string
        resourceState:
          type: string
      type: object
    DataDestination:
      description: The properties describing an Ambar Data Destination.
      example:
        filterId: filterId
        createdAt: createdAt
        destinationEndpoint: destinationEndpoint
        resourceId: resourceId
        projectionName: projectionName
        state: state
      properties:
        createdAt:
          description: The UTC time at which the DataDestination was created.
          type: string
        destinationEndpoint:
          description: The HTTP endpoint which Ambar sends filtered record sequences
            to.
          type: string
        projectionName:
          description: The name given to this DataDestinations projection at creation.
          type: string
        filterId:
          description: The Ambar resourceId for the Filter which is applied to record
            sequences sent to this Data Destination.
          type: string
        resourceId:
          description: The Ambar resourceId corresponding to this DataDestination.
          type: string
        state:
          description: The ResourceState of this DataDestination. For possible values
            see ResourceState in our developer docs.
          type: string
      type: object
    Filter:
      description: The properties describing an Ambar Filter.
      example:
        createdAt: createdAt
        resourceId: resourceId
        state: state
        dataDestinationsUsingFilter:
        - dataDestinationsUsingFilter
        - dataDestinationsUsingFilter
        dataSourcesInFilter:
        - dataSourcesInFilter
        - dataSourcesInFilter
      properties:
        createdAt:
          description: The UTC time at which the Filter was created.
          type: string
        dataDestinationsUsingFilter:
          description: The list of DataDestination ResourceIds which use this Filter.
          items:
            type: string
          type: array
        dataSourcesInFilter:
          description: The list of DataSource ResourceIds which this Filter will read
            from.
          items:
            type: string
          type: array
        resourceId:
          description: The Ambar resourceId corresponding to this Filter.
          type: string
        state:
          description: The ResourceState of this Filter. For possible values see ResourceState
            in our developer docs.
          type: string
      type: object
    DataSource:
      description: The properties describing an Ambar Data Source.
      example:
        createdAt: createdAt
        resourceId: resourceId
        dataSourceConfig: "{}"
        state: state
        dataSourceType: dataSourceType
      properties:
        createdAt:
          description: The UTC time at which the DataSource was created.
          type: string
        dataSourceConfig:
          description: The properties describing the configuration details for the
            given DataSourceType.
          type: object
        dataSourceType:
          description: The DataSourceType describing the type of durable storage system
            this DataSource pulls record sequences from.
          type: string
        resourceId:
          description: The Ambar resourceId corresponding to this DataSource.
          type: string
        state:
          description: The ResourceState of this DataSource. For possible values see
            ResourceState in our developer docs.
          type: string
      type: object
    CreateDataDestinationRequest:
      description: The request properties for creating an Ambar Data Destination.
      example:
        filterId: filterId
        destinationEndpoint: destinationEndpoint
        password: password
        projectionName: projectionName
        username: username
      properties:
        destinationEndpoint:
          description: The HTTP endpoint which Ambar will deliver messages too. The
            endpoint should accept a username and password credential pair for authentication.
          type: string
        filterId:
          description: The Ambar ResourceId of a the filter in your environment to
            use to determine what data sources to pull records from and how to filter
            record sequences before delivery to your endpoint.
          type: string
        projectionName:
          description: A name for this DataDestination projection
          type: string
        password:
          description: A case sensitive string for the user Ambar should use to connect
            to your HTTP endpoint service.
          type: string
        username:
          description: A case sensitive string for the user Ambar should use to connect
            to your HTTP endpoint service.
          type: string
      required:
      - destinationEndpoint
      - filterId
      - password
      - projectionName
      - username
      type: object
    DescribeResourceRequest:
      description: The common request for describing an Ambar resource.
      example:
        resourceId: resourceId
      properties:
        resourceId:
          description: An Ambar resourceId.
          type: string
      required:
      - resourceId
      type: object
    CreateDataSourceRequest:
      description: The request properties for creating an Ambar Data Source.
      example:
        dataSourceConfig: null
        dataSourceType: dataSourceType
      properties:
        dataSourceConfig:
          $ref: '#/components/schemas/CreateDataSourceRequest_dataSourceConfig'
        dataSourceType:
          description: A case-insensitive string value describing the type of durable
            storage system you wish to connect to your Ambar environment. See supported
            DataSourceTypes in our developer docs for more details on valid values.
          type: string
      required:
      - dataSourceConfig
      - dataSourceType
      type: object
    CreateFilterRequest:
      description: The request properties for creating an Ambar Filter.
      example:
        filterContents: filterContents
      properties:
        filterContents:
          description: The description of record filtering this filter should do.
            For details see the Filters section in our developer docs.
          type: string
      required:
      - filterContents
      type: object
    MysqlDataSource:
      properties:
        username:
          description: A case sensitive string for the user Ambar should use to connect
            to your MySQL database.
          type: string
        password:
          description: A case sensitive string for the user Ambar should use to connect
            to your MySQL database.
          type: string
        hostname:
          description: A case insensitive string for the host on which your MySQL
            database is running and which Ambar can use to reach the database.
          type: string
        hostPort:
          description: The port number passed as a string which Ambar can use to connect
            to your MySQL database instance.
          type: string
        databaseName:
          description: The case sensitive string name of the database on your database
            host.
          type: string
        tableName:
          description: The case sensitive string name of the table the DataSource
            should read.
          type: string
        globallyUniqueColumnName:
          description: The name of a column where the value for any record is globally
            unique.
          type: string
        incrementingColumnName:
          description: The name of a column which monotonically increases on database
            writes.
          type: string
        partitioningColumnName:
          description: A case sensitive string for the name of the column in your
            table Ambar can partition on.  Note that partition keys must be unique
            to a given sequence of records.
          type: string
        additionalColumns:
          description: "A case sensitive, comma separated list string of additional\
            \ columns to be read from  the table into Ambar."
          type: string
        binLogReplicationServerId:
          description: The server_id value used when starting the MySQL server. See
            MySQL docs for more information about this value and its defaults when
            not configured.
          type: string
        tlsTerminationOverrideHost:
          description: "The hostname of the server responsible for terminating TLS\
            \ connections for your server,  for example if your server is behind a\
            \ load balancer."
          type: string
      required:
      - additionalColumns
      - binLogReplicationServerId
      - databaseName
      - globallyUniqueColumnName
      - hostPort
      - hostname
      - incrementingColumnName
      - partitioningColumnName
      - password
      - tableName
      - tlsTerminationOverrideHost
      - username
      type: object
    PostgresDataSource:
      properties:
        username:
          description: A case sensitive string for the user Ambar should use to connect
            to your Postgres database.
          type: string
        password:
          description: A case sensitive string for the user Ambar should use to connect
            to your Postgres database.
          type: string
        hostname:
          description: A case insensitive string for the host on which your Postgres
            database is running and which Ambar can use to reach the database.
          type: string
        hostPort:
          description: The port number passed as a string which Ambar can use to connect
            to your Postgres database instance.
          type: string
        databaseName:
          description: The case sensitive string name of the database on your database
            host.
          type: string
        tableName:
          description: The case sensitive string name of the table the DataSource
            should read.
          type: string
        publicationName:
          description: The named publication Ambar should use to indicate to Postgres
            what tables Ambar will be replicating from.  The publication name must
            be distinct from the name of any existing publication in the current database.
            See Postgres documentation for your specific version of Postgres for more
            information on Postgres publications.
          type: string
        columnNames:
          description: "A case sensitive, comma separated list string of columns which\
            \ Ambar should read from the database. The ordering should be consistent\
            \ with the table from which Ambar will read."
          type: string
        sequenceNumColumn:
          description: A case sensitive string name of the column which is the incrementing
            sequence number for records on writes.
          type: string
        sequenceIdColumn:
          description: A case sensitive string name of the column which is the ID
            which Ambar will partition message sequences by.
          type: string
      required:
      - columnNames
      - databaseName
      - hostPort
      - hostname
      - password
      - publicationName
      - sequenceIdColumn
      - sequenceNumColumn
      - tableName
      - username
      type: object
    DeleteResourceRequest:
      description: The common request for deleting an Ambar resource.
      example:
        resourceId: resourceId
      properties:
        resourceId:
          description: An Ambar resourceId.
          type: string
          example: null
      required:
      - resourceId
      type: object
    InvalidFilterException:
      properties:
        InvalidFilterException:
          type: string
      required:
      - InvalidFilterException
      type: object
    InvalidParameterException:
      properties:
        InvalidParameterException:
          type: string
      required:
      - InvalidParameterException
      type: object
    ResourceInvalidStateException:
      properties:
        ResourceInvalidStateException:
          type: string
      required:
      - ResourceInvalidStateException
      type: object
    ResourceNotFoundException:
      properties:
        ResourceNotFoundException:
          type: string
      required:
      - ResourceNotFoundException
      type: object
    AmbarServiceException:
      properties:
        AmbarServiceException:
          type: string
      required:
      - AmbarServiceException
      type: object
    CreateFilter_400_response:
      oneOf:
      - $ref: '#/components/schemas/InvalidParameterException'
      - $ref: '#/components/schemas/ResourceInvalidStateException'
      - $ref: '#/components/schemas/InvalidFilterException'
    DeleteFilter_400_response:
      oneOf:
      - $ref: '#/components/schemas/InvalidParameterException'
      - $ref: '#/components/schemas/ResourceInvalidStateException'
    ResourceTypeDetails_limit:
      example:
        limit: 0
        used: 6
      properties:
        limit:
          type: integer
        used:
          type: integer
      type: object
    CreateDataSourceRequest_dataSourceConfig:
      description: A object containing inputs which are specific depending on the
        type of DataSource being created. See out developer docs for supported DataSourceTypes.
      oneOf:
      - $ref: '#/components/schemas/MysqlDataSource'
      - $ref: '#/components/schemas/PostgresDataSource'
      type: object
  securitySchemes:
    api_key:
      in: header
      name: x-api-key
      type: apiKey
